pipeline {
    agent any
    environment {
        D_USERNAME = credentials('DOCKER_USERNAME')
        D_PSSWD = credentials('DOCKER_PASSWORD')
	SSH_CREDENTIALS = credentials('ssh-remote20')
    }
    tools {
        maven 'MAVEN386'
    }
    stages {
        stage('App pull') {
            steps {
                sh 'jenkins-docker-maven/scripts/pull-app.sh'
            }
        }
        stage('Test') {
            steps {
                sh '''
                    jenkins-docker-maven/scripts/maven.sh mvn clean
                    jenkins-docker-maven/scripts/maven.sh mvn test
                    '''
            }
            post {
                always {
                    junit 'jenkins-docker-maven/app/target/surefire-reports/*.xml'
                }
            }
        }
        stage('App build') {
            steps {
                sh '''
			jenkins-docker-maven/scripts/maven.sh mvn -B -DskipTests clean package
			cp -r $PWD/jenkins-docker-maven/app/target/*.jar $PWD/jenkins-docker-maven/data
		   '''
            }
            post {
                success {
                    archiveArtifacts artifacts: 'jenkins-docker-maven/data/*.jar', fingerprint: true
		    // s3Upload consoleLogLevel: 'INFO', dontSetBuildResultOnFailure: false, dontWaitForConcurrentBuildCompletion: false, entries: [[bucket: 'kops-state-997/${JOB_NAME}-${BUILD_NUMBER}', excludedFile: '', flatten: false, gzipFiles: false, keepForever: false, managedArtifacts: false, noUploadOnFailure: false, selectedRegion: 'us-east-1', showDirectlyInBrowser: false, sourceFile: 'jenkins-docker-maven/data/*.jar', storageClass: 'STANDARD', uploadFromSlave: false, useServerSideEncryption: false]], pluginFailureResultConstraint: 'FAILURE', profileName: 'docker-jenkins-project', userMetadata: []
                }
	    }
        }
        stage('Image Build'){
               steps {
                sh '''
			docker compose -f jenkins-docker-maven/data/docker-compose-java.yaml build --no-cache
		   '''
            }
        }
        stage('Image Push'){
               steps {
                sh 'jenkins-docker-maven/scripts/push-image.sh $BUILD_NUMBER $D_USERNAME $D_PSSWD'
            }
        }
	stage('Deploy'){
		steps {
			script {
                    	sshagent(credentials: ['ssh-remote20']) {
				sh '''
                                        scp "jenkins-docker-maven/scripts/vm/init.sh" vagrant@192.168.77.20:/tmp
                                        ssh -n "vagrant@192.168.77.20" "/tmp/init.sh $BUILD_NUMBER"
                                   '''
                    }
		}
	    }
	}
    }
}
